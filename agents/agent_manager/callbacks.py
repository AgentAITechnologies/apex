from rich import print

from agents.state_callback import StateCallback

## Begin code generated by meta_tools/update_callbacks.py

class root_Callback(StateCallback):
    def on_enter(self, csm, locals):
        print(f"{self.PRINT_PREFIX} Entering root")
        # Perform actions when entering root
        pass

    def on_exit(self, csm, locals):
        print(f"{self.PRINT_PREFIX} Exiting root")
        # Perform actions when exiting root
        pass

class AwaitIPC_Callback(StateCallback):
    def on_enter(self, csm, locals):
        print(f"{self.PRINT_PREFIX} Entering AwaitTask")
        # Perform actions when entering AwaitTask
        pass

    def on_exit(self, csm, locals):
        print(f"{self.PRINT_PREFIX} Exiting AwaitTask")
        # Perform actions when exiting AwaitTask
        pass

class RouteAction_Callback(StateCallback):
    def on_enter(self, csm, locals):
        print(f"{self.PRINT_PREFIX} Entering RouteAction")
        # Perform actions when entering RouteTask

        print(f"{self.PRINT_PREFIX} Routing action: {locals['action']}")

    def on_exit(self, csm, locals):
        print(f"{self.PRINT_PREFIX} Exiting RouteAction")
        # Perform actions when exiting RouteTask
        
        print(f"{self.PRINT_PREFIX} Routed action: {locals['action']}")
